/**
 * Vouchery API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: hello@vouchery.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RewardSetDiscount model module.
 * @module model/RewardSetDiscount
 * @version 2.0.0
 */
class RewardSetDiscount {
    /**
     * Constructs a new <code>RewardSetDiscount</code>.
     * @alias module:model/RewardSetDiscount
     * @param type {module:model/RewardSetDiscount.TypeEnum} This reward sets specific discount for transaction amount during a redemption or order completion.
     * @param discountType {module:model/RewardSetDiscount.DiscountTypeEnum} Discount type defines if a customer should receive a discount of 10% or $10 on their order. Gft Card type of reward works as a gift card: voucher can be used several times, discount value can be distributed to many transactions.
     * @param discountValue {Number} 
     */
    constructor(type, discountType, discountValue) {

        RewardSetDiscount.initialize(this, type, discountType, discountValue);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type, discountType, discountValue) {
        obj['type'] = type;
        obj['discount_type'] = discountType;
        obj['discount_value'] = discountValue;
    }

    /**
     * Constructs a <code>RewardSetDiscount</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RewardSetDiscount} obj Optional instance to populate.
     * @return {module:model/RewardSetDiscount} The populated <code>RewardSetDiscount</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RewardSetDiscount();

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('discount_type')) {
                obj['discount_type'] = ApiClient.convertToType(data['discount_type'], 'String');
            }
            if (data.hasOwnProperty('discount_value')) {
                obj['discount_value'] = ApiClient.convertToType(data['discount_value'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * This reward sets specific discount for transaction amount during a redemption or order completion.
 * @member {module:model/RewardSetDiscount.TypeEnum} type
 * @default 'set_discount'
 */
RewardSetDiscount.prototype['type'] = 'set_discount';

/**
 * @member {String} title
 */
RewardSetDiscount.prototype['title'] = undefined;

/**
 * @member {String} description
 */
RewardSetDiscount.prototype['description'] = undefined;

/**
 * Discount type defines if a customer should receive a discount of 10% or $10 on their order. Gft Card type of reward works as a gift card: voucher can be used several times, discount value can be distributed to many transactions.
 * @member {module:model/RewardSetDiscount.DiscountTypeEnum} discount_type
 */
RewardSetDiscount.prototype['discount_type'] = undefined;

/**
 * @member {Number} discount_value
 */
RewardSetDiscount.prototype['discount_value'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
RewardSetDiscount['TypeEnum'] = {

    /**
     * value: "set_discount"
     * @const
     */
    "set_discount": "set_discount"
};


/**
 * Allowed values for the <code>discount_type</code> property.
 * @enum {String}
 * @readonly
 */
RewardSetDiscount['DiscountTypeEnum'] = {

    /**
     * value: "numeric"
     * @const
     */
    "numeric": "numeric",

    /**
     * value: "percentage"
     * @const
     */
    "percentage": "percentage",

    /**
     * value: "gift_card"
     * @const
     */
    "gift_card": "gift_card"
};



export default RewardSetDiscount;