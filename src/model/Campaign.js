/**
 * Vouchery API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: hello@vouchery.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Campaign model module.
 * @module model/Campaign
 * @version 2.0
 */
class Campaign {
    /**
     * Constructs a new <code>Campaign</code>.
     * @alias module:model/Campaign
     * @param type {module:model/Campaign.TypeEnum} This field is required only when you create a campaign. Main Campaign is a wrapper for multipe Sub Campaings, grouped together. Main Campaign can have own budget and redemptions limit.
     * @param parentId {Number} Required only for subcampaigns.
     * @param name {String} The name of the campaign must be unique.
     */
    constructor(type, parentId, name) {

        Campaign.initialize(this, type, parentId, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type, parentId, name) {
        obj['type'] = type;
        obj['parent_id'] = parentId;
        obj['name'] = name;
    }

    /**
     * Constructs a <code>Campaign</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Campaign} obj Optional instance to populate.
     * @return {module:model/Campaign} The populated <code>Campaign</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Campaign();

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('parent_id')) {
                obj['parent_id'] = ApiClient.convertToType(data['parent_id'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('triggers_on')) {
                obj['triggers_on'] = ApiClient.convertToType(data['triggers_on'], 'String');
            }
            if (data.hasOwnProperty('trigger_name')) {
                obj['trigger_name'] = ApiClient.convertToType(data['trigger_name'], 'String');
            }
            if (data.hasOwnProperty('template')) {
                obj['template'] = ApiClient.convertToType(data['template'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('customer_information')) {
                obj['customer_information'] = ApiClient.convertToType(data['customer_information'], 'String');
            }
            if (data.hasOwnProperty('max_total_budget')) {
                obj['max_total_budget'] = ApiClient.convertToType(data['max_total_budget'], 'Number');
            }
            if (data.hasOwnProperty('max_redemptions')) {
                obj['max_redemptions'] = ApiClient.convertToType(data['max_redemptions'], 'Number');
            }
            if (data.hasOwnProperty('minimum_value')) {
                obj['minimum_value'] = ApiClient.convertToType(data['minimum_value'], 'Number');
            }
            if (data.hasOwnProperty('max_discount')) {
                obj['max_discount'] = ApiClient.convertToType(data['max_discount'], 'Number');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('currency_symbol')) {
                obj['currency_symbol'] = ApiClient.convertToType(data['currency_symbol'], 'String');
            }
            if (data.hasOwnProperty('team')) {
                obj['team'] = ApiClient.convertToType(data['team'], 'String');
            }
            if (data.hasOwnProperty('channel')) {
                obj['channel'] = ApiClient.convertToType(data['channel'], 'String');
            }
            if (data.hasOwnProperty('purpose')) {
                obj['purpose'] = ApiClient.convertToType(data['purpose'], 'String');
            }
            if (data.hasOwnProperty('budget_code')) {
                obj['budget_code'] = ApiClient.convertToType(data['budget_code'], 'String');
            }
            if (data.hasOwnProperty('medium')) {
                obj['medium'] = ApiClient.convertToType(data['medium'], 'String');
            }
            if (data.hasOwnProperty('voucher_type')) {
                obj['voucher_type'] = ApiClient.convertToType(data['voucher_type'], 'String');
            }
            if (data.hasOwnProperty('voucher_code_type')) {
                obj['voucher_code_type'] = ApiClient.convertToType(data['voucher_code_type'], 'String');
            }
            if (data.hasOwnProperty('voucher_random_part_length')) {
                obj['voucher_random_part_length'] = ApiClient.convertToType(data['voucher_random_part_length'], 'Number');
            }
            if (data.hasOwnProperty('voucher_prefix')) {
                obj['voucher_prefix'] = ApiClient.convertToType(data['voucher_prefix'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
        }
        return obj;
    }


}

/**
 * This field is required only when you create a campaign. Main Campaign is a wrapper for multipe Sub Campaings, grouped together. Main Campaign can have own budget and redemptions limit.
 * @member {module:model/Campaign.TypeEnum} type
 */
Campaign.prototype['type'] = undefined;

/**
 * @member {Number} id
 */
Campaign.prototype['id'] = undefined;

/**
 * Required only for subcampaigns.
 * @member {Number} parent_id
 */
Campaign.prototype['parent_id'] = undefined;

/**
 * @member {module:model/Campaign.StatusEnum} status
 */
Campaign.prototype['status'] = undefined;

/**
 * The name of the campaign must be unique.
 * @member {String} name
 */
Campaign.prototype['name'] = undefined;

/**
 * What type of trigger sub campaign is reacting on to check rules and give rewards.
 * @member {module:model/Campaign.TriggersOnEnum} triggers_on
 */
Campaign.prototype['triggers_on'] = undefined;

/**
 * If campaign is triggered by custom trigger, it's name should be specified.
 * @member {String} trigger_name
 */
Campaign.prototype['trigger_name'] = undefined;

/**
 * Determines campaign business type & structure to setup
 * @member {module:model/Campaign.TemplateEnum} template
 */
Campaign.prototype['template'] = undefined;

/**
 * @member {String} description
 */
Campaign.prototype['description'] = undefined;

/**
 * Text that can be displayed to the customer once the redemption is validated or confirmed.
 * @member {String} customer_information
 */
Campaign.prototype['customer_information'] = undefined;

/**
 * The budget available for all discount campaigns grouped by this campaign.
 * @member {Number} max_total_budget
 */
Campaign.prototype['max_total_budget'] = undefined;

/**
 * The maximum number of redemptions available across all discount campaigns grouped by this campaign.
 * @member {Number} max_redemptions
 */
Campaign.prototype['max_redemptions'] = undefined;

/**
 * @member {Number} minimum_value
 */
Campaign.prototype['minimum_value'] = undefined;

/**
 * @member {Number} max_discount
 */
Campaign.prototype['max_discount'] = undefined;

/**
 * Currency denominating monetary values in this campaign (USD, GBP, EUR, AUD)
 * @member {String} currency
 */
Campaign.prototype['currency'] = undefined;

/**
 * Currency symbol ($, £, €)
 * @member {String} currency_symbol
 */
Campaign.prototype['currency_symbol'] = undefined;

/**
 * @member {String} team
 */
Campaign.prototype['team'] = undefined;

/**
 * @member {String} channel
 */
Campaign.prototype['channel'] = undefined;

/**
 * @member {String} purpose
 */
Campaign.prototype['purpose'] = undefined;

/**
 * @member {String} budget_code
 */
Campaign.prototype['budget_code'] = undefined;

/**
 * @member {String} medium
 */
Campaign.prototype['medium'] = undefined;

/**
 * Determines what type of vouchers can be generated for campaign. Generic vouchers (eg. SALE10) can be redeemed multiple times. Unique vouchers allow for greater control and better tracking of who and how is using your promotions.
 * @member {module:model/Campaign.VoucherTypeEnum} voucher_type
 */
Campaign.prototype['voucher_type'] = undefined;

/**
 * What characters should the code include when new voucher is created. Possible choices are digits, letters, and mixed.
 * @member {module:model/Campaign.VoucherCodeTypeEnum} voucher_code_type
 */
Campaign.prototype['voucher_code_type'] = undefined;

/**
 * How long should the random part of the code be? Valid values are between 2 and 10, depending on batch size.
 * @member {Number} voucher_random_part_length
 */
Campaign.prototype['voucher_random_part_length'] = undefined;

/**
 * A prefix that will be used to generate vouchers. Needs to be unique within project.
 * @member {String} voucher_prefix
 */
Campaign.prototype['voucher_prefix'] = undefined;

/**
 * @member {Date} created_at
 */
Campaign.prototype['created_at'] = undefined;

/**
 * @member {Date} updated_at
 */
Campaign.prototype['updated_at'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
Campaign['TypeEnum'] = {

    /**
     * value: "MainCampaign"
     * @const
     */
    "MainCampaign": "MainCampaign",

    /**
     * value: "SubCampaign"
     * @const
     */
    "SubCampaign": "SubCampaign"
};


/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
Campaign['StatusEnum'] = {

    /**
     * value: "draft"
     * @const
     */
    "draft": "draft",

    /**
     * value: "active"
     * @const
     */
    "active": "active",

    /**
     * value: "inactive"
     * @const
     */
    "inactive": "inactive",

    /**
     * value: "archived"
     * @const
     */
    "archived": "archived"
};


/**
 * Allowed values for the <code>triggers_on</code> property.
 * @enum {String}
 * @readonly
 */
Campaign['TriggersOnEnum'] = {

    /**
     * value: "customer_points_change"
     * @const
     */
    "customer_points_change": "customer_points_change",

    /**
     * value: "redemption"
     * @const
     */
    "redemption": "redemption",

    /**
     * value: "custom"
     * @const
     */
    "custom": "custom"
};


/**
 * Allowed values for the <code>template</code> property.
 * @enum {String}
 * @readonly
 */
Campaign['TemplateEnum'] = {

    /**
     * value: "discount"
     * @const
     */
    "discount": "discount",

    /**
     * value: "loyalty"
     * @const
     */
    "loyalty": "loyalty",

    /**
     * value: "gift_card"
     * @const
     */
    "gift_card": "gift_card",

    /**
     * value: "sub_redemption"
     * @const
     */
    "sub_redemption": "sub_redemption",

    /**
     * value: "sub_reward_points"
     * @const
     */
    "sub_reward_points": "sub_reward_points",

    /**
     * value: "sub_generate_vouchers"
     * @const
     */
    "sub_generate_vouchers": "sub_generate_vouchers"
};


/**
 * Allowed values for the <code>voucher_type</code> property.
 * @enum {String}
 * @readonly
 */
Campaign['VoucherTypeEnum'] = {

    /**
     * value: "unique"
     * @const
     */
    "unique": "unique",

    /**
     * value: "generic"
     * @const
     */
    "generic": "generic"
};


/**
 * Allowed values for the <code>voucher_code_type</code> property.
 * @enum {String}
 * @readonly
 */
Campaign['VoucherCodeTypeEnum'] = {

    /**
     * value: "digits"
     * @const
     */
    "digits": "digits",

    /**
     * value: "letters"
     * @const
     */
    "letters": "letters",

    /**
     * value: "mixed"
     * @const
     */
    "mixed": "mixed"
};



export default Campaign;