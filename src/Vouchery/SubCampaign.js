/**
 * Vouchery API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: hello@vouchery.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CampaignCreatedBy from './CampaignCreatedBy';

/**
 * The SubCampaign model module.
 * @module Vouchery/SubCampaign
 * @version 2.0.0
 */
class SubCampaign {
    /**
     * Constructs a new <code>SubCampaign</code>.
     * @alias module:Vouchery/SubCampaign
     * @param type {module:Vouchery/SubCampaign.TypeEnum} This field is required only when you create a campaign
     * @param parentId {Number} Main campaign ID
     * @param name {String} The name of the campaign must be unique.
     */
    constructor(type, parentId, name) {

        SubCampaign.initialize(this, type, parentId, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type, parentId, name) {
        obj['type'] = type;
        obj['parent_id'] = parentId;
        obj['name'] = name;
    }

    /**
     * Constructs a <code>SubCampaign</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:Vouchery/SubCampaign} obj Optional instance to populate.
     * @return {module:Vouchery/SubCampaign} The populated <code>SubCampaign</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SubCampaign();

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('parent_id')) {
                obj['parent_id'] = ApiClient.convertToType(data['parent_id'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('triggers_on')) {
                obj['triggers_on'] = ApiClient.convertToType(data['triggers_on'], 'String');
            }
            if (data.hasOwnProperty('trigger_name')) {
                obj['trigger_name'] = ApiClient.convertToType(data['trigger_name'], 'String');
            }
            if (data.hasOwnProperty('template')) {
                obj['template'] = ApiClient.convertToType(data['template'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('customer_information')) {
                obj['customer_information'] = ApiClient.convertToType(data['customer_information'], 'String');
            }
            if (data.hasOwnProperty('max_total_budget')) {
                obj['max_total_budget'] = ApiClient.convertToType(data['max_total_budget'], 'Number');
            }
            if (data.hasOwnProperty('max_redemptions')) {
                obj['max_redemptions'] = ApiClient.convertToType(data['max_redemptions'], 'Number');
            }
            if (data.hasOwnProperty('minimum_value')) {
                obj['minimum_value'] = ApiClient.convertToType(data['minimum_value'], 'Number');
            }
            if (data.hasOwnProperty('max_discount')) {
                obj['max_discount'] = ApiClient.convertToType(data['max_discount'], 'Number');
            }
            if (data.hasOwnProperty('redemptions_count')) {
                obj['redemptions_count'] = ApiClient.convertToType(data['redemptions_count'], 'Number');
            }
            if (data.hasOwnProperty('total_budget_spent')) {
                obj['total_budget_spent'] = ApiClient.convertToType(data['total_budget_spent'], 'Number');
            }
            if (data.hasOwnProperty('vouchers_distributed_count')) {
                obj['vouchers_distributed_count'] = ApiClient.convertToType(data['vouchers_distributed_count'], 'Number');
            }
            if (data.hasOwnProperty('vouchers_count')) {
                obj['vouchers_count'] = ApiClient.convertToType(data['vouchers_count'], 'Number');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('currency_symbol')) {
                obj['currency_symbol'] = ApiClient.convertToType(data['currency_symbol'], 'String');
            }
            if (data.hasOwnProperty('channel')) {
                obj['channel'] = ApiClient.convertToType(data['channel'], 'String');
            }
            if (data.hasOwnProperty('purpose')) {
                obj['purpose'] = ApiClient.convertToType(data['purpose'], 'String');
            }
            if (data.hasOwnProperty('medium')) {
                obj['medium'] = ApiClient.convertToType(data['medium'], 'String');
            }
            if (data.hasOwnProperty('voucher_type')) {
                obj['voucher_type'] = ApiClient.convertToType(data['voucher_type'], 'String');
            }
            if (data.hasOwnProperty('voucher_max_redemptions')) {
                obj['voucher_max_redemptions'] = ApiClient.convertToType(data['voucher_max_redemptions'], 'Number');
            }
            if (data.hasOwnProperty('voucher_code_type')) {
                obj['voucher_code_type'] = ApiClient.convertToType(data['voucher_code_type'], 'String');
            }
            if (data.hasOwnProperty('voucher_random_part_length')) {
                obj['voucher_random_part_length'] = ApiClient.convertToType(data['voucher_random_part_length'], 'Number');
            }
            if (data.hasOwnProperty('voucher_prefix')) {
                obj['voucher_prefix'] = ApiClient.convertToType(data['voucher_prefix'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('created_by')) {
                obj['created_by'] = CampaignCreatedBy.constructFromObject(data['created_by']);
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('updated_by')) {
                obj['updated_by'] = CampaignCreatedBy.constructFromObject(data['updated_by']);
            }
        }
        return obj;
    }


}

/**
 * This field is required only when you create a campaign
 * @member {module:Vouchery/SubCampaign.TypeEnum} type
 */
SubCampaign.prototype['type'] = undefined;

/**
 * @member {Number} id
 */
SubCampaign.prototype['id'] = undefined;

/**
 * Main campaign ID
 * @member {Number} parent_id
 */
SubCampaign.prototype['parent_id'] = undefined;

/**
 * @member {module:Vouchery/SubCampaign.StatusEnum} status
 */
SubCampaign.prototype['status'] = undefined;

/**
 * The name of the campaign must be unique.
 * @member {String} name
 */
SubCampaign.prototype['name'] = undefined;

/**
 * What type of trigger sub campaign is reacting on to check rules and give rewards.
 * @member {module:Vouchery/SubCampaign.TriggersOnEnum} triggers_on
 */
SubCampaign.prototype['triggers_on'] = undefined;

/**
 * If campaign is triggered by custom trigger, it's name should be specified.
 * @member {String} trigger_name
 */
SubCampaign.prototype['trigger_name'] = undefined;

/**
 * Valid templates are sub_redemption, sub_reward_points, sub_generate_vouchers.
 * @member {module:Vouchery/SubCampaign.TemplateEnum} template
 */
SubCampaign.prototype['template'] = undefined;

/**
 * @member {String} description
 */
SubCampaign.prototype['description'] = undefined;

/**
 * Text that can be displayed to the customer once the redemption is validated or confirmed.
 * @member {String} customer_information
 */
SubCampaign.prototype['customer_information'] = undefined;

/**
 * The budget available for discount campaign.
 * @member {Number} max_total_budget
 */
SubCampaign.prototype['max_total_budget'] = undefined;

/**
 * The maximum number of redemptions available.
 * @member {Number} max_redemptions
 */
SubCampaign.prototype['max_redemptions'] = undefined;

/**
 * @member {Number} minimum_value
 */
SubCampaign.prototype['minimum_value'] = undefined;

/**
 * @member {Number} max_discount
 */
SubCampaign.prototype['max_discount'] = undefined;

/**
 * @member {Number} redemptions_count
 */
SubCampaign.prototype['redemptions_count'] = undefined;

/**
 * @member {Number} total_budget_spent
 */
SubCampaign.prototype['total_budget_spent'] = undefined;

/**
 * @member {Number} vouchers_distributed_count
 */
SubCampaign.prototype['vouchers_distributed_count'] = undefined;

/**
 * @member {Number} vouchers_count
 */
SubCampaign.prototype['vouchers_count'] = undefined;

/**
 * Currency denominating monetary values in this campaign (USD, GBP, EUR, AUD)
 * @member {String} currency
 */
SubCampaign.prototype['currency'] = undefined;

/**
 * Currency symbol ($, £, €)
 * @member {String} currency_symbol
 */
SubCampaign.prototype['currency_symbol'] = undefined;

/**
 * @member {String} channel
 */
SubCampaign.prototype['channel'] = undefined;

/**
 * @member {String} purpose
 */
SubCampaign.prototype['purpose'] = undefined;

/**
 * @member {String} medium
 */
SubCampaign.prototype['medium'] = undefined;

/**
 * Determines what type of vouchers can be generated for campaign. Generic vouchers (eg. SALE10) can be redeemed multiple times. Unique vouchers allow for greater control and better tracking of who and how is using your promotions.
 * @member {module:Vouchery/SubCampaign.VoucherTypeEnum} voucher_type
 */
SubCampaign.prototype['voucher_type'] = undefined;

/**
 * The maximum number of redemptions per unique voucher code.
 * @member {Number} voucher_max_redemptions
 */
SubCampaign.prototype['voucher_max_redemptions'] = undefined;

/**
 * What characters should the code include when new voucher is created. Possible choices are digits, letters, and mixed.
 * @member {module:Vouchery/SubCampaign.VoucherCodeTypeEnum} voucher_code_type
 */
SubCampaign.prototype['voucher_code_type'] = undefined;

/**
 * How long should the random part of the code be? Valid values are between 2 and 10, depending on batch size.
 * @member {Number} voucher_random_part_length
 */
SubCampaign.prototype['voucher_random_part_length'] = undefined;

/**
 * A prefix that will be used to generate vouchers. Needs to be unique within project.
 * @member {String} voucher_prefix
 */
SubCampaign.prototype['voucher_prefix'] = undefined;

/**
 * @member {Date} created_at
 */
SubCampaign.prototype['created_at'] = undefined;

/**
 * @member {module:Vouchery/CampaignCreatedBy} created_by
 */
SubCampaign.prototype['created_by'] = undefined;

/**
 * @member {Date} updated_at
 */
SubCampaign.prototype['updated_at'] = undefined;

/**
 * @member {module:Vouchery/CampaignCreatedBy} updated_by
 */
SubCampaign.prototype['updated_by'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
SubCampaign['TypeEnum'] = {

    /**
     * value: "SubCampaign"
     * @const
     */
    "SubCampaign": "SubCampaign"
};


/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
SubCampaign['StatusEnum'] = {

    /**
     * value: "draft"
     * @const
     */
    "draft": "draft",

    /**
     * value: "active"
     * @const
     */
    "active": "active",

    /**
     * value: "inactive"
     * @const
     */
    "inactive": "inactive",

    /**
     * value: "archived"
     * @const
     */
    "archived": "archived"
};


/**
 * Allowed values for the <code>triggers_on</code> property.
 * @enum {String}
 * @readonly
 */
SubCampaign['TriggersOnEnum'] = {

    /**
     * value: "customer_points_change"
     * @const
     */
    "customer_points_change": "customer_points_change",

    /**
     * value: "redemption"
     * @const
     */
    "redemption": "redemption",

    /**
     * value: "custom"
     * @const
     */
    "custom": "custom"
};


/**
 * Allowed values for the <code>template</code> property.
 * @enum {String}
 * @readonly
 */
SubCampaign['TemplateEnum'] = {

    /**
     * value: "sub_redemption"
     * @const
     */
    "redemption": "sub_redemption",

    /**
     * value: "sub_reward_points"
     * @const
     */
    "reward_points": "sub_reward_points",

    /**
     * value: "sub_generate_vouchers"
     * @const
     */
    "generate_vouchers": "sub_generate_vouchers"
};


/**
 * Allowed values for the <code>voucher_type</code> property.
 * @enum {String}
 * @readonly
 */
SubCampaign['VoucherTypeEnum'] = {

    /**
     * value: "unique"
     * @const
     */
    "unique": "unique",

    /**
     * value: "generic"
     * @const
     */
    "generic": "generic"
};


/**
 * Allowed values for the <code>voucher_code_type</code> property.
 * @enum {String}
 * @readonly
 */
SubCampaign['VoucherCodeTypeEnum'] = {

    /**
     * value: "digits"
     * @const
     */
    "digits": "digits",

    /**
     * value: "letters"
     * @const
     */
    "letters": "letters",

    /**
     * value: "mixed"
     * @const
     */
    "mixed": "mixed"
};



export default SubCampaign;