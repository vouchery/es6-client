/**
 * Vouchery API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: hello@vouchery.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RuleCustomerPoints model module.
 * @module Vouchery/RuleCustomerPoints
 * @version 2.0.0
 */
class RuleCustomerPoints {
    /**
     * Constructs a new <code>RuleCustomerPoints</code>.
     * @alias module:Vouchery/RuleCustomerPoints
     * @param type {module:Vouchery/RuleCustomerPoints.TypeEnum} Customer loyalty points should fit specific conditions.
     * @param operator {module:Vouchery/RuleCustomerPoints.OperatorEnum} What kind of check should system do, comparing loyalty points and rule value property.
     * @param value {Number} Value to compare loyalty points with.
     */
    constructor(type, operator, value) {

        RuleCustomerPoints.initialize(this, type, operator, value);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type, operator, value) {
        obj['type'] = type;
        obj['operator'] = operator;
        obj['value'] = value;
    }

    /**
     * Constructs a <code>RuleCustomerPoints</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:Vouchery/RuleCustomerPoints} obj Optional instance to populate.
     * @return {module:Vouchery/RuleCustomerPoints} The populated <code>RuleCustomerPoints</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RuleCustomerPoints();

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('operator')) {
                obj['operator'] = ApiClient.convertToType(data['operator'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Customer loyalty points should fit specific conditions.
 * @member {module:Vouchery/RuleCustomerPoints.TypeEnum} type
 */
RuleCustomerPoints.prototype['type'] = undefined;

/**
 * What kind of check should system do, comparing loyalty points and rule value property.
 * @member {module:Vouchery/RuleCustomerPoints.OperatorEnum} operator
 */
RuleCustomerPoints.prototype['operator'] = undefined;

/**
 * Value to compare loyalty points with.
 * @member {Number} value
 */
RuleCustomerPoints.prototype['value'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
RuleCustomerPoints['TypeEnum'] = {

    /**
     * value: "CustomerPoints"
     * @const
     */
    "CustomerPoints": "CustomerPoints"
};


/**
 * Allowed values for the <code>operator</code> property.
 * @enum {String}
 * @readonly
 */
RuleCustomerPoints['OperatorEnum'] = {

    /**
     * value: "equals"
     * @const
     */
    "equals": "equals",

    /**
     * value: "is_more"
     * @const
     */
    "is_more": "is_more",

    /**
     * value: "is_more_or_equal"
     * @const
     */
    "is_more_or_equal": "is_more_or_equal",

    /**
     * value: "is_less"
     * @const
     */
    "is_less": "is_less",

    /**
     * value: "is_less_or_equal"
     * @const
     */
    "is_less_or_equal": "is_less_or_equal",

    /**
     * value: "between"
     * @const
     */
    "between": "between",

    /**
     * value: "division_remainder_equals_zero"
     * @const
     */
    "division_remainder_equals_zero": "division_remainder_equals_zero"
};



export default RuleCustomerPoints;