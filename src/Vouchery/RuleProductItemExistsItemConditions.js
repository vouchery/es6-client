/**
 * Vouchery API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: hello@vouchery.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RuleProductItemExistsItemConditions model module.
 * @module Vouchery/RuleProductItemExistsItemConditions
 * @version 2.0.0
 */
class RuleProductItemExistsItemConditions {
    /**
     * Constructs a new <code>RuleProductItemExistsItemConditions</code>.
     * @alias module:Vouchery/RuleProductItemExistsItemConditions
     */
    constructor() {

        RuleProductItemExistsItemConditions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) {}

    /**
     * Constructs a <code>RuleProductItemExistsItemConditions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:Vouchery/RuleProductItemExistsItemConditions} obj Optional instance to populate.
     * @return {module:Vouchery/RuleProductItemExistsItemConditions} The populated <code>RuleProductItemExistsItemConditions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RuleProductItemExistsItemConditions();

            if (data.hasOwnProperty('field')) {
                obj['field'] = ApiClient.convertToType(data['field'], 'String');
            }
            if (data.hasOwnProperty('operator')) {
                obj['operator'] = ApiClient.convertToType(data['operator'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {module:Vouchery/RuleProductItemExistsItemConditions.FieldEnum} field
 */
RuleProductItemExistsItemConditions.prototype['field'] = undefined;

/**
 * What kind of check should system do, comparing field of item with given value
 * @member {module:Vouchery/RuleProductItemExistsItemConditions.OperatorEnum} operator
 */
RuleProductItemExistsItemConditions.prototype['operator'] = undefined;

/**
 * Value to compare. Can be number or string, depending on field to compare
 * @member {String} value
 */
RuleProductItemExistsItemConditions.prototype['value'] = undefined;





/**
 * Allowed values for the <code>field</code> property.
 * @enum {String}
 * @readonly
 */
RuleProductItemExistsItemConditions['FieldEnum'] = {

    /**
     * value: "name"
     * @const
     */
    "name": "name",

    /**
     * value: "price"
     * @const
     */
    "price": "price",

    /**
     * value: "sku"
     * @const
     */
    "sku": "sku",

    /**
     * value: "quantity"
     * @const
     */
    "quantity": "quantity",

    /**
     * value: "product_identifier"
     * @const
     */
    "product_identifier": "product_identifier",

    /**
     * value: "weight"
     * @const
     */
    "weight": "weight",

    /**
     * value: "categories"
     * @const
     */
    "categories": "categories"
};


/**
 * Allowed values for the <code>operator</code> property.
 * @enum {String}
 * @readonly
 */
RuleProductItemExistsItemConditions['OperatorEnum'] = {

    /**
     * value: "equals"
     * @const
     */
    "equals": "equals",

    /**
     * value: "is_more"
     * @const
     */
    "is_more": "is_more",

    /**
     * value: "is_more_or_equal"
     * @const
     */
    "is_more_or_equal": "is_more_or_equal",

    /**
     * value: "is_less"
     * @const
     */
    "is_less": "is_less",

    /**
     * value: "is_less_or_equal"
     * @const
     */
    "is_less_or_equal": "is_less_or_equal",

    /**
     * value: "between"
     * @const
     */
    "between": "between",

    /**
     * value: "division_remainder_equals_zero"
     * @const
     */
    "division_remainder_equals_zero": "division_remainder_equals_zero",

    /**
     * value: "include"
     * @const
     */
    "include": "include"
};



export default RuleProductItemExistsItemConditions;